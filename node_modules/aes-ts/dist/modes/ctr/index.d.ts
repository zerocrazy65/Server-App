import type { BufferInput } from '../../utils';
import { Encryptor } from '../../block';
import { Counter } from './counter';
import { ModeOfOperationCTR } from './base';
export declare class CTREncryptor extends ModeOfOperationCTR<Encryptor> {
    constructor(key: BufferInput, counter: Counter);
    encrypt(plaintext: BufferInput): Uint8Array;
}
export declare class CTRDecryptor extends ModeOfOperationCTR<Encryptor> {
    constructor(key: BufferInput, counter: Counter);
    decrypt(ciphertext: BufferInput): Uint8Array;
}
export declare class CTR extends ModeOfOperationCTR<Encryptor> {
    constructor(key: BufferInput, counter: Counter);
    encrypt(plaintext: BufferInput): Uint8Array;
    decrypt(ciphertext: BufferInput): Uint8Array;
}
