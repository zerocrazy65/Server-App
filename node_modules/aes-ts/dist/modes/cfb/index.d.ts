import type { BufferInput } from '../../utils';
import { Block, Encryptor } from '../../block';
import { ModeOfOperationCFB } from './base';
export declare class CFBEncryptor extends ModeOfOperationCFB<Encryptor> {
    constructor(key: BufferInput, iv: BufferInput, segmentSize: number);
    encrypt(plaintext: BufferInput): Uint8Array;
}
export declare class CFBDecryptor extends ModeOfOperationCFB<Encryptor> {
    constructor(key: BufferInput, iv: BufferInput, segmentSize: number);
    decrypt(ciphertext: BufferInput): Uint8Array;
}
export declare class CFB extends ModeOfOperationCFB<Block> {
    constructor(key: BufferInput, iv: BufferInput, segmentSize: number);
    encrypt(plaintext: BufferInput): Uint8Array;
    decrypt(ciphertext: BufferInput): Uint8Array;
}
