"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParameterParser = void 0;
const HttpsError_1 = require("../HttpsError");
class ParameterParser {
    paramterBuilders;
    logger;
    initialParameters;
    constructor(paramterBuilders, logger) {
        this.paramterBuilders = paramterBuilders;
        this.logger = logger;
    }
    get parameters() {
        if (this.initialParameters === undefined)
            throw (0, HttpsError_1.HttpsError)('internal', 'Tried to access parameters before those parameters were parsed.', this.logger);
        return this.initialParameters;
    }
    parseParameters(container) {
        this.logger.log('ParameterParser.parseParameters', { container: container });
        this.initialParameters = {};
        for (const entry of Object.entries(this.paramterBuilders))
            this.initialParameters[entry[0]] = container.parameter(entry[0], entry[1], this.logger.nextIndent);
        this.initialParameters.databaseType = container.databaseType;
    }
}
exports.ParameterParser = ParameterParser;
