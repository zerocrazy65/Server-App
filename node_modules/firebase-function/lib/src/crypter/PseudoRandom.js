"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PseudoRandom = void 0;
class PseudoRandom {
    INITIAL_MASH_N = 0xefc8249d;
    state;
    constructor(seed) {
        let n = this.INITIAL_MASH_N;
        let state0 = this.mashResult(n = this.mash(Uint8Array.from([32]), n));
        let state1 = this.mashResult(n = this.mash(Uint8Array.from([32]), n));
        let state2 = this.mashResult(n = this.mash(Uint8Array.from([32]), n));
        state0 -= this.mashResult(n = this.mash(seed, n));
        if (state0 < 0)
            state0 += 1;
        state1 -= this.mashResult(n = this.mash(seed, n));
        if (state1 < 0)
            state1 += 1;
        state2 -= this.mashResult(n = this.mash(seed, n));
        if (state2 < 0)
            state2 += 1;
        this.state = { state0: state0, state1: state1, state2: state2, constant: 1 };
    }
    mash(data, n) {
        for (let i = 0; i < data.length; i++) {
            n += data[i];
            let h = 0.02519603282416938 * n;
            n = Math.trunc(h);
            h -= n;
            h *= n;
            n = Math.trunc(h);
            h -= n;
            n += h * 0x100000000;
        }
        return n;
    }
    mashResult(n) {
        return Math.trunc(n) * 2.3283064365386963e-10;
    }
    random() {
        const t = 2091639 * this.state.state0 + this.state.constant * 2.3283064365386963e-10;
        this.state.state0 = this.state.state1;
        this.state.state1 = this.state.state2;
        this.state.constant = Math.trunc(t);
        this.state.state2 = t - this.state.constant;
        return this.state.state2;
    }
    randomByte() {
        return Math.floor(this.random() * 256);
    }
}
exports.PseudoRandom = PseudoRandom;
