"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerboseType = void 0;
const HttpsError_1 = require("../HttpsError");
class VerboseType {
    value;
    constructor(value) {
        this.value = value;
    }
    get isVerbose() {
        return this.value === 'verbose' || this.value === 'coloredVerbose';
    }
    get isColored() {
        return this.value === 'colored' || this.value === 'coloredVerbose';
    }
}
exports.VerboseType = VerboseType;
(function (VerboseType) {
    function fromString(value, databaseType, logger) {
        logger.log('VerboseType.fromObject', { value: value, databaseType: databaseType });
        if (value !== 'none' && value !== 'verbose' && value !== 'colored' && value !== 'coloredVerbose')
            throw (0, HttpsError_1.HttpsError)('internal', `Couldn't get verbose type from ${value}.`, logger);
        if (databaseType.value === 'release' && value === 'verbose')
            return new VerboseType('none');
        else if (databaseType.value === 'release' && value === 'coloredVerbose')
            return new VerboseType('colored');
        return new VerboseType(value);
    }
    VerboseType.fromString = fromString;
})(VerboseType = exports.VerboseType || (exports.VerboseType = {}));
